// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'login_response_model.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

LoginResponseModel _$LoginResponseModelFromJson(Map<String, dynamic> json) =>
    LoginResponseModel(
      $type: json[r'$type'] as String?,
      data: json['Data'] == null
          ? null
          : Data.fromJson(json['Data'] as Map<String, dynamic>),
    );

Map<String, dynamic> _$LoginResponseModelToJson(LoginResponseModel instance) =>
    <String, dynamic>{
      r'$type': instance.$type,
      'Data': instance.data,
    };

Data _$DataFromJson(Map<String, dynamic> json) => Data(
      $type: json[r'$type'] as String?,
      pattern: json['Pattern'] as String?,
      oldPattern: json['OldPattern'] as String?,
      applicationVersion: json['ApplicationVersion'],
      operatingSystem: json['OperatingSystem'],
      state: json['State'] as int?,
      customerInfo: json['CustomerInfo'] == null
          ? null
          : CustomerInfo.fromJson(json['CustomerInfo'] as Map<String, dynamic>),
      auditLogId: json['AuditLogId'] as int?,
    );

Map<String, dynamic> _$DataToJson(Data instance) => <String, dynamic>{
      r'$type': instance.$type,
      'Pattern': instance.pattern,
      'OldPattern': instance.oldPattern,
      'ApplicationVersion': instance.applicationVersion,
      'OperatingSystem': instance.operatingSystem,
      'State': instance.state,
      'CustomerInfo': instance.customerInfo,
      'AuditLogId': instance.auditLogId,
    };

CustomerInfo _$CustomerInfoFromJson(Map<String, dynamic> json) => CustomerInfo(
      $type: json[r'$type'] as String?,
      mIsToAccount: json['m_IsToAccount'] as bool?,
      customerCompanyInformation: json['CustomerCompanyInformation'],
      accountAssociationType: json['AccountAssociationType'] as int?,
      mainBranchCode: json['MainBranchCode'] as int?,
      firmName: json['FirmName'] as String?,
      name: json['Name'] as String?,
      middleName: json['MiddleName'] as String?,
      lastName: json['LastName'] as String?,
      shortName: json['ShortName'] as String?,
      atmShortName: json['ATMShortName'] as String?,
      fullName: json['FullName'] as String?,
      portfolioManagerCode: json['PortfolioManagerCode'] as String?,
      senderName: json['SenderName'] as String?,
      displayName: json['DisplayName'] as String?,
      taxOffice: json['TaxOffice'] as String?,
      taxNo: json['TaxNo'] as int?,
      firmTaxNo: json['FirmTaxNo'] as int?,
      citizenShipNumber: json['CitizenShipNumber'] as int?,
      identityType: json['IdentityType'] as String?,
      identityNo: json['IdentityNo'] as String?,
      drivingLicenseNo: json['DrivingLicenseNo'] as String?,
      ibSeries: json['IBSeries'] as String?,
      ibSerialNo: json['IBSerialNo'] as int?,
      identitySerialNumber: json['IdentitySerialNumber'] as String?,
      footballTeam: json['FootballTeam'] as int?,
      internationalFootballTeam: json['InternationalFootballTeam'] as int?,
      customerSelectedName: json['CustomerSelectedName'] as int?,
      vip: json['VIP'] as int?,
      isDoCustomer: json['IsDoCustomer'] as bool?,
      doCustomerRecordTime: json['DoCustomerRecordTime'] == null
          ? null
          : DateTime.parse(json['DoCustomerRecordTime'] as String),
      ibRegisteredCity: json['IBRegisteredCity'] as String?,
      ibRegisteredCityName: json['IBRegisteredCityName'] as String?,
      ibRegisteredTown: json['IBRegisteredTown'] as String?,
      ibQuarter: json['IBQuarter'] as String?,
      ibVolume: json['IBVolume'] as String?,
      ibFamilyOrderNo: json['IBFamilyOrderNo'] as String?,
      ibOrderNo: json['IBOrderNo'] as String?,
      processCode: json['ProcessCode'] as int?,
      ibSecurityCode: json['IBSecurityCode'],
      isMobile: json['IsMobile'] as bool?,
      age: json['Age'] as int?,
      birthDate: json['BirthDate'] == null
          ? null
          : DateTime.parse(json['BirthDate'] as String),
      fatherName: json['FatherName'] as String?,
      motherName: json['MotherName'] as String?,
      id: json['ID'] as int?,
      customerNo: json['CustomerNo'] as int?,
      userName: json['UserName'] as String?,
      eMail: json['EMail'] as String?,
      eMailConfirmationStatus: json['EMailConfirmationStatus'] as bool?,
      firmEMail: json['FirmEMail'] as String?,
      customerType: json['CustomerType'] as int?,
      customerPersonalAccountNo: json['CustomerPersonalAccountNo'] as int?,
      customerPersonalNo: json['CustomerPersonalNo'] as int?,
      lastLogonTime: json['LastLogonTime'] == null
          ? null
          : DateTime.parse(json['LastLogonTime'] as String),
      smsVerification: json['SmsVerification'] as bool?,
      lastLogonChannel: json['LastLogonChannel'] as String?,
      phoneList: (json['PhoneList'] as List<dynamic>?)
          ?.map((e) => PhoneList.fromJson(e as Map<String, dynamic>))
          .toList(),
      phoneListInformation: json['PhoneListInformation'],
      firmPhoneList: json['FirmPhoneList'],
      firmPhoneListInformation: json['FirmPhoneListInformation'],
      faxList: json['FaxList'],
      socialMediaList: json['SocialMediaList'] as List<dynamic>?,
      socialMediaListInformation: json['SocialMediaListInformation'],
      addressList: (json['AddressList'] as List<dynamic>?)
          ?.map((e) => AddressList.fromJson(e as Map<String, dynamic>))
          .toList(),
      addressListInformation: json['AddressListInformation'],
      addressListNew: (json['AddressListNew'] as List<dynamic>?)
          ?.map((e) => AddressListNew.fromJson(e as Map<String, dynamic>))
          .toList(),
      addressListNewInformation: json['AddressListNewInformation'],
      relatedContactList: json['RelatedContactList'] as List<dynamic>?,
      groupId: json['GroupID'] as int?,
      status: json['Status'] as int?,
      birthPlace: json['BirthPlace'] as String?,
      birthPlaceCode: json['BirthPlaceCode'] as int?,
      workingCompany: json['WorkingCompany'] as String?,
      corporateCode: json['CorporateCode'] as String?,
      corporateAuthorizationLevel: json['CorporateAuthorizationLevel'],
      isCorporateCustomer: json['IsCorporateCustomer'] as bool?,
      isContact: json['IsContact'] as bool?,
      isTarisCustomer: json['IsTarisCustomer'] as bool?,
      ekstreAdresi: json['EkstreAdresi'] as int?,
      creditCardDeliveryAddress: json['CreditCardDeliveryAddress'] as int?,
      quantisEkstreAdresi: json['QuantisEkstreAdresi'] as int?,
      primarySchoolName: json['PrimarySchoolName'] as String?,
      gender: json['Gender'] as String?,
      maritalStatus: json['MaritalStatus'] as int?,
      motherMaidenName: json['MotherMaidenName'] as String?,
      isGroupPersonel: json['IsGroupPersonel'] as bool?,
      leasingCustomerNo: json['LeasingCustomerNo'] as String?,
      passwordReminderQuestion: json['PasswordReminderQuestion'] as String?,
      password1: json['Password1'] as String?,
      password2: json['Password2'] as String?,
      password2Cancelled: json['Password2Cancelled'] as bool?,
      isDotLoginExpired: json['IsDotLoginExpired'] as bool?,
      securityImageId: json['SecurityImageId'] as String?,
      backgroundImagePath: json['BackgroundImagePath'] as String?,
      favoritesPages: json['FavoritesPages'] as String?,
      hasAvatar: json['HasAvatar'] as bool?,
      securityImageChangeForce: json['SecurityImageChangeForce'] as bool?,
      mainPageId: json['MainPageId'] as int?,
      logoutTime: json['LogoutTime'] as int?,
      ccMenuItemCode: json['CCMenuItemCode'] as String?,
      netSalary: json['NetSalary'] as String?,
      totalIncome: json['TotalIncome'] as String?,
      segmentValue: json['SegmentValue'] as int?,
      segmentProfile: json['SegmentProfile'] as int?,
      segmentProperty: json['SegmentProperty'] as int?,
      businessLine: json['BusinessLine'] as int?,
      isSahs: json['IsSahÄ±s'] as bool?,
      customerRetailApplicationInfo: json['CustomerRetailApplicationInfo'] ==
              null
          ? null
          : CustomerRetailApplicationInfo.fromJson(
              json['CustomerRetailApplicationInfo'] as Map<String, dynamic>),
      portfolioCode: json['PortfolioCode'] as String?,
      nationality: json['Nationality'] as int?,
      workTitle: json['WorkTitle'] as String?,
      jobTitle: json['JobTitle'] as String?,
      menuType: json['MenuType'] as int?,
      retirementInfo: json['RetirementInfo'] as int?,
      toAccountSecurityType: json['ToAccountSecurityType'] as int?,
      isToAccount: json['IsToAccount'] as bool?,
      residenceStatus: json['ResidenceStatus'] as int?,
      educationStatus: json['EducationStatus'] as int?,
      workingStatus: json['WorkingStatus'] as int?,
      previousWorkingStatus: json['PreviousWorkingStatus'] as int?,
      workArea: json['WorkArea'] as int?,
      customerEmploymentStatus: json['CustomerEmploymentStatus'] as String?,
      optionalInsured: json['OptionalInsured'] as String?,
      unitStatus: json['UnitStatus'] as int?,
      isMobilePhoneChanged: json['IsMobilePhoneChanged'] as bool?,
      atmCustomerGroup: json['ATMCustomerGroup'] as String?,
      atmCardGroupCode: json['ATMCardGroupCode'] as String?,
      atmCardGroupStyle: json['ATMCardGroupStyle'] as String?,
      customerProfile: json['CustomerProfile'] as String?,
      recordStatus: json['RecordStatus'] as String?,
      masakDurumKodu: json['MasakDurumKodu'] as String?,
      segmentCode: json['SegmentCode'] as int?,
      prosecutionStatus: json['ProsecutionStatus'] as String?,
      isAccessible: json['IsAccessible'] as bool?,
      dateOfDeath: json['DateOfDeath'] == null
          ? null
          : DateTime.parse(json['DateOfDeath'] as String),
      isObCustomer: json['IsOBCustomer'] as String?,
      subSegment: json['SubSegment'] as String?,
      subSegmentName: json['SubSegmentName'],
      customerCitiBankStatus: json['CustomerCitiBankStatus'] as int?,
      hasTbhsDocument: json['HasTBHSDocument'] as bool?,
      tbhsVersion: json['TbhsVersion'] as String?,
      unwantedProducts: json['UnwantedProducts'],
      customerPusulaId: json['CustomerPusulaId'] as int?,
      isChangedOnlyGsm2: json['IsChangedOnlyGSM2'] as bool?,
      mainUserId: json['MainUserID'] as int?,
      mainCustomerNo: json['MainCustomerNo'] as int?,
      mainCustomerPersonalAccountNo:
          json['MainCustomerPersonalAccountNo'] as int?,
      isDisabledCustomer: json['IsDisabledCustomer'] as bool?,
      typeOfDisabled: json['TypeOfDisabled'],
      levelOfDisabled: json['LevelOfDisabled'],
      loginChoice: json['LoginChoice'] as int?,
      customerStatus: json['CustomerStatus'],
      esbCustomerEmail: json['EsbCustomerEmail'],
      sessionId: json['SessionId'] as int?,
      hearingDisableRate: json['HearingDisableRate'] as int?,
      shareAccounts: json['ShareAccounts'],
      residenceCountryCode: json['ResidenceCountryCode'] as String?,
      identityStatus: json['IdentityStatus'] as String?,
      bornCountry: json['BornCountry'] as int?,
      hasKobakusIntegration: json['HasKobakusIntegration'] as bool?,
      telephoneBankingStatus: json['TelephoneBankingStatus'] as int?,
      isHasMagicNumber: json['IsHasMagicNumber'] as bool?,
      hasSoftToken: json['HasSoftToken'] as bool?,
      acqusitionFlag: json['AcqusitionFlag'] as bool?,
      isCompany: json['IsCompany'] as bool?,
      referencePersonnel: json['ReferencePersonnel'] as String?,
      passwordEncryptionType: json['PasswordEncryptionType'] as int?,
    );

Map<String, dynamic> _$CustomerInfoToJson(CustomerInfo instance) =>
    <String, dynamic>{
      r'$type': instance.$type,
      'm_IsToAccount': instance.mIsToAccount,
      'CustomerCompanyInformation': instance.customerCompanyInformation,
      'AccountAssociationType': instance.accountAssociationType,
      'MainBranchCode': instance.mainBranchCode,
      'FirmName': instance.firmName,
      'Name': instance.name,
      'MiddleName': instance.middleName,
      'LastName': instance.lastName,
      'ShortName': instance.shortName,
      'ATMShortName': instance.atmShortName,
      'FullName': instance.fullName,
      'PortfolioManagerCode': instance.portfolioManagerCode,
      'SenderName': instance.senderName,
      'DisplayName': instance.displayName,
      'TaxOffice': instance.taxOffice,
      'TaxNo': instance.taxNo,
      'FirmTaxNo': instance.firmTaxNo,
      'CitizenShipNumber': instance.citizenShipNumber,
      'IdentityType': instance.identityType,
      'IdentityNo': instance.identityNo,
      'DrivingLicenseNo': instance.drivingLicenseNo,
      'IBSeries': instance.ibSeries,
      'IBSerialNo': instance.ibSerialNo,
      'IdentitySerialNumber': instance.identitySerialNumber,
      'FootballTeam': instance.footballTeam,
      'InternationalFootballTeam': instance.internationalFootballTeam,
      'CustomerSelectedName': instance.customerSelectedName,
      'VIP': instance.vip,
      'IsDoCustomer': instance.isDoCustomer,
      'DoCustomerRecordTime': instance.doCustomerRecordTime?.toIso8601String(),
      'IBRegisteredCity': instance.ibRegisteredCity,
      'IBRegisteredCityName': instance.ibRegisteredCityName,
      'IBRegisteredTown': instance.ibRegisteredTown,
      'IBQuarter': instance.ibQuarter,
      'IBVolume': instance.ibVolume,
      'IBFamilyOrderNo': instance.ibFamilyOrderNo,
      'IBOrderNo': instance.ibOrderNo,
      'ProcessCode': instance.processCode,
      'IBSecurityCode': instance.ibSecurityCode,
      'IsMobile': instance.isMobile,
      'Age': instance.age,
      'BirthDate': instance.birthDate?.toIso8601String(),
      'FatherName': instance.fatherName,
      'MotherName': instance.motherName,
      'ID': instance.id,
      'CustomerNo': instance.customerNo,
      'UserName': instance.userName,
      'EMail': instance.eMail,
      'EMailConfirmationStatus': instance.eMailConfirmationStatus,
      'FirmEMail': instance.firmEMail,
      'CustomerType': instance.customerType,
      'CustomerPersonalAccountNo': instance.customerPersonalAccountNo,
      'CustomerPersonalNo': instance.customerPersonalNo,
      'LastLogonTime': instance.lastLogonTime?.toIso8601String(),
      'SmsVerification': instance.smsVerification,
      'LastLogonChannel': instance.lastLogonChannel,
      'PhoneList': instance.phoneList,
      'PhoneListInformation': instance.phoneListInformation,
      'FirmPhoneList': instance.firmPhoneList,
      'FirmPhoneListInformation': instance.firmPhoneListInformation,
      'FaxList': instance.faxList,
      'SocialMediaList': instance.socialMediaList,
      'SocialMediaListInformation': instance.socialMediaListInformation,
      'AddressList': instance.addressList,
      'AddressListInformation': instance.addressListInformation,
      'AddressListNew': instance.addressListNew,
      'AddressListNewInformation': instance.addressListNewInformation,
      'RelatedContactList': instance.relatedContactList,
      'GroupID': instance.groupId,
      'Status': instance.status,
      'BirthPlace': instance.birthPlace,
      'BirthPlaceCode': instance.birthPlaceCode,
      'WorkingCompany': instance.workingCompany,
      'CorporateCode': instance.corporateCode,
      'CorporateAuthorizationLevel': instance.corporateAuthorizationLevel,
      'IsCorporateCustomer': instance.isCorporateCustomer,
      'IsContact': instance.isContact,
      'IsTarisCustomer': instance.isTarisCustomer,
      'EkstreAdresi': instance.ekstreAdresi,
      'CreditCardDeliveryAddress': instance.creditCardDeliveryAddress,
      'QuantisEkstreAdresi': instance.quantisEkstreAdresi,
      'PrimarySchoolName': instance.primarySchoolName,
      'Gender': instance.gender,
      'MaritalStatus': instance.maritalStatus,
      'MotherMaidenName': instance.motherMaidenName,
      'IsGroupPersonel': instance.isGroupPersonel,
      'LeasingCustomerNo': instance.leasingCustomerNo,
      'PasswordReminderQuestion': instance.passwordReminderQuestion,
      'Password1': instance.password1,
      'Password2': instance.password2,
      'Password2Cancelled': instance.password2Cancelled,
      'IsDotLoginExpired': instance.isDotLoginExpired,
      'SecurityImageId': instance.securityImageId,
      'BackgroundImagePath': instance.backgroundImagePath,
      'FavoritesPages': instance.favoritesPages,
      'HasAvatar': instance.hasAvatar,
      'SecurityImageChangeForce': instance.securityImageChangeForce,
      'MainPageId': instance.mainPageId,
      'LogoutTime': instance.logoutTime,
      'CCMenuItemCode': instance.ccMenuItemCode,
      'NetSalary': instance.netSalary,
      'TotalIncome': instance.totalIncome,
      'SegmentValue': instance.segmentValue,
      'SegmentProfile': instance.segmentProfile,
      'SegmentProperty': instance.segmentProperty,
      'BusinessLine': instance.businessLine,
      'IsSahÄ±s': instance.isSahs,
      'CustomerRetailApplicationInfo': instance.customerRetailApplicationInfo,
      'PortfolioCode': instance.portfolioCode,
      'Nationality': instance.nationality,
      'WorkTitle': instance.workTitle,
      'JobTitle': instance.jobTitle,
      'MenuType': instance.menuType,
      'RetirementInfo': instance.retirementInfo,
      'ToAccountSecurityType': instance.toAccountSecurityType,
      'IsToAccount': instance.isToAccount,
      'ResidenceStatus': instance.residenceStatus,
      'EducationStatus': instance.educationStatus,
      'WorkingStatus': instance.workingStatus,
      'PreviousWorkingStatus': instance.previousWorkingStatus,
      'WorkArea': instance.workArea,
      'CustomerEmploymentStatus': instance.customerEmploymentStatus,
      'OptionalInsured': instance.optionalInsured,
      'UnitStatus': instance.unitStatus,
      'IsMobilePhoneChanged': instance.isMobilePhoneChanged,
      'ATMCustomerGroup': instance.atmCustomerGroup,
      'ATMCardGroupCode': instance.atmCardGroupCode,
      'ATMCardGroupStyle': instance.atmCardGroupStyle,
      'CustomerProfile': instance.customerProfile,
      'RecordStatus': instance.recordStatus,
      'MasakDurumKodu': instance.masakDurumKodu,
      'SegmentCode': instance.segmentCode,
      'ProsecutionStatus': instance.prosecutionStatus,
      'IsAccessible': instance.isAccessible,
      'DateOfDeath': instance.dateOfDeath?.toIso8601String(),
      'IsOBCustomer': instance.isObCustomer,
      'SubSegment': instance.subSegment,
      'SubSegmentName': instance.subSegmentName,
      'CustomerCitiBankStatus': instance.customerCitiBankStatus,
      'HasTBHSDocument': instance.hasTbhsDocument,
      'TbhsVersion': instance.tbhsVersion,
      'UnwantedProducts': instance.unwantedProducts,
      'CustomerPusulaId': instance.customerPusulaId,
      'IsChangedOnlyGSM2': instance.isChangedOnlyGsm2,
      'MainUserID': instance.mainUserId,
      'MainCustomerNo': instance.mainCustomerNo,
      'MainCustomerPersonalAccountNo': instance.mainCustomerPersonalAccountNo,
      'IsDisabledCustomer': instance.isDisabledCustomer,
      'TypeOfDisabled': instance.typeOfDisabled,
      'LevelOfDisabled': instance.levelOfDisabled,
      'LoginChoice': instance.loginChoice,
      'CustomerStatus': instance.customerStatus,
      'EsbCustomerEmail': instance.esbCustomerEmail,
      'SessionId': instance.sessionId,
      'HearingDisableRate': instance.hearingDisableRate,
      'ShareAccounts': instance.shareAccounts,
      'ResidenceCountryCode': instance.residenceCountryCode,
      'IdentityStatus': instance.identityStatus,
      'BornCountry': instance.bornCountry,
      'HasKobakusIntegration': instance.hasKobakusIntegration,
      'TelephoneBankingStatus': instance.telephoneBankingStatus,
      'IsHasMagicNumber': instance.isHasMagicNumber,
      'HasSoftToken': instance.hasSoftToken,
      'AcqusitionFlag': instance.acqusitionFlag,
      'IsCompany': instance.isCompany,
      'ReferencePersonnel': instance.referencePersonnel,
      'PasswordEncryptionType': instance.passwordEncryptionType,
    };

PhoneList _$PhoneListFromJson(Map<String, dynamic> json) => PhoneList(
      type: json['Type'] as int?,
      $type: json['type'] as String?,
      ischanged: json['Ischanged'] as bool?,
      cityCode: json['CityCode'] as String?,
      number: json['LoginChoice'] as String?,
      countryCode: json['Number'] as String?,
      internalNumber: json['InternalNumber'] as String?,
      typeInformation: json['TypeInformation'] as String?,
      isConfirm: json['IsConfirm'] as bool?,
      isValidated: json['IsValidated'] as String?,
      verificationType: json['VerificationType'],
      verificationDate: json['VerificationDate'] as String?,
    );

Map<String, dynamic> _$PhoneListToJson(PhoneList instance) => <String, dynamic>{
      'type': instance.$type,
      'Type': instance.type,
      'Ischanged': instance.ischanged,
      'CityCode': instance.cityCode,
      'LoginChoice': instance.number,
      'Number': instance.countryCode,
      'InternalNumber': instance.internalNumber,
      'TypeInformation': instance.typeInformation,
      'IsConfirm': instance.isConfirm,
      'IsValidated': instance.isValidated,
      'VerificationType': instance.verificationType,
      'VerificationDate': instance.verificationDate,
    };

AddressList _$AddressListFromJson(Map<String, dynamic> json) => AddressList(
      $type: json['type'] as String?,
      addressType: json['AddressType'] as int?,
      countryCode: json['CountryCode'] as int?,
      countryAbrv: json['CountryAbrv'] as String?,
      cityCode: json['CityCode'] as int?,
      town: json['Town'] as String?,
      district: json['District'] as String?,
      quarter: json['Quarter'] as String?,
      avenue: json['Avenue'] as String?,
      street: json['Street'] as String?,
      site: json['Site'] as String?,
      apartment: json['Apartment'] as String?,
      number: json['Number'] as int?,
      floor: json['Floor'] as int?,
      flat: json['Flat'] as int?,
      postalCode: json['PostalCode'] as String?,
      cityName: json['CityName'] as String?,
    );

Map<String, dynamic> _$AddressListToJson(AddressList instance) =>
    <String, dynamic>{
      'type': instance.$type,
      'AddressType': instance.addressType,
      'CountryCode': instance.countryCode,
      'CountryAbrv': instance.countryAbrv,
      'CityCode': instance.cityCode,
      'Town': instance.town,
      'District': instance.district,
      'Quarter': instance.quarter,
      'Avenue': instance.avenue,
      'Street': instance.street,
      'Site': instance.site,
      'Apartment': instance.apartment,
      'Number': instance.number,
      'Floor': instance.floor,
      'Flat': instance.flat,
      'PostalCode': instance.postalCode,
      'CityName': instance.cityName,
    };

AddressListNew _$AddressListNewFromJson(Map<String, dynamic> json) =>
    AddressListNew(
      $type: json[r'$type'] as String?,
      addressType: json['AddressType'] as int?,
      countryCode: json['CountryCode'] as int?,
      countryAbrv: json['CountryAbrv'] as String?,
      countryName: json['CountryName'] as String?,
      lastModifiedBy: json['LastModifiedBy'] as String?,
      cityCode: json['CityCode'] as int?,
      city: json['City'] as String?,
      town: json['Town'] as String?,
      district: json['District'] as String?,
      street: json['Street'] as String?,
      addressDetail: json['AddressDetail'] as String?,
      postalCode: json['PostalCode'] as String?,
      validationLevel: json['ValidationLevel'] as int?,
      stateAbrv: json['StateAbrv'] as String?,
      stateName: json['StateName'] as String?,
      fullAddress: json['FullAddress'],
    );

Map<String, dynamic> _$AddressListNewToJson(AddressListNew instance) =>
    <String, dynamic>{
      r'$type': instance.$type,
      'AddressType': instance.addressType,
      'CountryCode': instance.countryCode,
      'CountryAbrv': instance.countryAbrv,
      'CountryName': instance.countryName,
      'LastModifiedBy': instance.lastModifiedBy,
      'CityCode': instance.cityCode,
      'City': instance.city,
      'Town': instance.town,
      'District': instance.district,
      'Street': instance.street,
      'AddressDetail': instance.addressDetail,
      'PostalCode': instance.postalCode,
      'ValidationLevel': instance.validationLevel,
      'StateAbrv': instance.stateAbrv,
      'StateName': instance.stateName,
      'FullAddress': instance.fullAddress,
    };

CustomerRetailApplicationInfo _$CustomerRetailApplicationInfoFromJson(
        Map<String, dynamic> json) =>
    CustomerRetailApplicationInfo(
      $type: json[r'$type'] as String?,
    );

Map<String, dynamic> _$CustomerRetailApplicationInfoToJson(
        CustomerRetailApplicationInfo instance) =>
    <String, dynamic>{
      r'$type': instance.$type,
    };
